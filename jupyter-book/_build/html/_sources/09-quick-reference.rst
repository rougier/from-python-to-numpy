Quick References
===============================================================================

.. contents:: **Contents**
   :local:


Data type
---------

============= ====== ===== =====================================================
Type          Name   Bytes Description
============= ====== ===== =====================================================
`bool`        `b`    1     Boolean (True or False) stored as a byte 
------------- ------ ----- -----------------------------------------------------
`int`         `l`    4-8   Platform (long) integer (normally either int32 or int64)
------------- ------ ----- -----------------------------------------------------
`intp`        `p`    4-8   Integer used for indexing (normally either int32 or int64)
------------- ------ ----- -----------------------------------------------------
`int8`        `i1`   1     Byte (-128 to 127)
------------- ------ ----- -----------------------------------------------------
`int16`       `i2`   2     Integer (-32768 to 32767)
------------- ------ ----- -----------------------------------------------------
`int32`       `i4`   4     Integer (-2147483648 to 2147483647)
------------- ------ ----- -----------------------------------------------------
`int64`       `i8`   8     Integer (-9223372036854775808 to 9223372036854775807)
------------- ------ ----- -----------------------------------------------------
`uint8`       `u1`   1     Unsigned integer (0 to 255)
------------- ------ ----- -----------------------------------------------------
`uint16`      `u2`   2     Unsigned integer (0 to 65535)
------------- ------ ----- -----------------------------------------------------
`uint32`      `u4`   4     Unsigned integer (0 to 4294967295)
------------- ------ ----- -----------------------------------------------------
`uint64`      `u8`   8     Unsigned integer (0 to 18446744073709551615)
------------- ------ ----- -----------------------------------------------------
`float`       `f8`   8     Shorthand for float64
------------- ------ ----- -----------------------------------------------------
`float16`     `f2`   2     Half precision float:
                           sign bit, 5 bits exponent, 10 bits mantissa
------------- ------ ----- -----------------------------------------------------
`float32`     `f`    4     Single precision float:
                           sign bit, 8 bits exponent, 23 bits mantissa
------------- ------ ----- -----------------------------------------------------
`float64`     `d`    8     Double precision float:
                           sign bit, 11 bits exponent, 52 bits mantissa
------------- ------ ----- -----------------------------------------------------
`complex`     `c16`  16    Shorthand for complex128.
------------- ------ ----- -----------------------------------------------------
`complex64`   `c8`   8     Complex number, represented by two 32-bit floats
------------- ------ ----- -----------------------------------------------------
`complex128`  `c16`  16    Complex number, represented by two 64-bit floats
============= ====== ===== =====================================================

`bool`, `int`, `float`, and `complex` are understood, but named `np.bool_` with
an additional underscore in NumPy. Additionally the names such as `intc`,
`long`, or `double`  used in the C programming language are defined. 

Creation
--------

.. -------------------------------------
.. code-block:: python

   Z = np.zeros(9)
   
.. code::
   :class: output
  
   ┌───┬───┬───┬───┬───┬───┬───┬───┬───┐
   │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │
   └───┴───┴───┴───┴───┴───┴───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z = np.ones(9)
   
.. code::
   :class: output
  
   ┌───┬───┬───┬───┬───┬───┬───┬───┬───┐
   │ 1 │ 1 │ 1 │ 1 │ 1 │ 1 │ 1 │ 1 │ 1 │
   └───┴───┴───┴───┴───┴───┴───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z = np.array([1,0,0,0,0,0,0,1,0])

.. code::
   :class: output
  
   ┌───┬───┬───┬───┬───┬───┬───┬───┬───┐
   │ 1 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 1 │ 0 │
   └───┴───┴───┴───┴───┴───┴───┴───┴───┘


.. -------------------------------------   
.. code-block:: python

   Z = 2*np.ones(9)
   
.. code::
   :class: output
  
   ┌───┬───┬───┬───┬───┬───┬───┬───┬───┐
   │ 2 │ 2 │ 2 │ 2 │ 2 │ 2 │ 2 │ 2 │ 2 │
   └───┴───┴───┴───┴───┴───┴───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z = np.arange(9)
   
.. code::
   :class: output
  
   ┌───┬───┬───┬───┬───┬───┬───┬───┬───┐
   │ 0 │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │
   └───┴───┴───┴───┴───┴───┴───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(9,1)
   
.. code::
   :class: output
  
   ┌───┐
   │ 0 │
   ├───┤
   │ 1 │
   ├───┤
   │ 2 │
   ├───┤
   │ 3 │
   ├───┤
   │ 4 │
   ├───┤
   │ 5 │
   ├───┤
   │ 6 │
   ├───┤
   │ 7 │
   ├───┤
   │ 8 │
   └───┘


.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(3,3)
   
.. code::
   :class: output
  
   ┌───┬───┬───┐
   │ 0 │ 1 │ 2 │
   ├───┼───┼───┤
   │ 3 │ 4 │ 5 │
   ├───┼───┼───┤
   │ 6 │ 7 │ 8 │
   └───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z = np.random.randint(0,9,(3,3))
   
.. code::
   :class: output
  
   ┌───┬───┬───┐
   │ 4 │ 5 │ 7 │
   ├───┼───┼───┤
   │ 0 │ 2 │ 6 │
   ├───┼───┼───┤
   │ 8 │ 4 │ 0 │
   └───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z = np.linspace(0, 1, 5)
   
.. code::
   :class: output
  
   ┌──────┬──────┬──────┬──────┬──────┐
   │ 0.00 │ 0.25 │ 0.50 │ 0.75 │ 1.00 │
   └──────┴──────┴──────┴──────┴──────┘

.. -------------------------------------
.. code-block:: python

   np.mgrid[0:3,0:3]
   
.. code::
   :class: output
  
   ┌───┬───┬───┐   ┌───┬───┬───┐
   │ 0 │ 0 │ 0 │   │ 0 │ 1 │ 2 │
   ├───┼───┼───┤   ├───┼───┼───┤
   │ 1 │ 1 │ 1 │   │ 0 │ 1 │ 2 │
   ├───┼───┼───┤   ├───┼───┼───┤
   │ 2 │ 2 │ 2 │   │ 0 │ 1 │ 2 │
   └───┴───┴───┘   └───┴───┴───┘


Indexing
--------

.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(3,3)
   Z[0,0]
   
.. code::
   :class: output
  
   ┏━━━┓───┬───┐   ┏━━━┓
   ┃ 0 ┃ 1 │ 2 │ → ┃ 0 ┃ (scalar)
   ┗━━━┛───┼───┤   ┗━━━┛
   │ 3 │ 4 │ 5 │  
   ├───┼───┼───┤
   │ 6 │ 7 │ 8 │
   └───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(3,3)
   Z[-1,-1]
   
.. code::
   :class: output
  
   ┌───┬───┬───┐
   │ 0 │ 1 │ 2 │
   ├───┼───┼───┤
   │ 3 │ 4 │ 5 │
   ├───┼───┏━━━┓   ┏━━━┓
   │ 6 │ 7 ┃ 8 ┃ → ┃ 8 ┃ (scalar)
   └───┴───┗━━━┛   ┗━━━┛


.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(3,3)
   Z[1]
   
.. code::
   :class: output
  
   ┌───┬───┬───┐   
   │ 0 │ 1 │ 2 │ 
   ┏━━━┳━━━┳━━━┓   ┏━━━┳━━━┳━━━┓
   ┃ 3 ┃ 4 ┃ 5 ┃ → ┃ 3 ┃ 4 ┃ 5 ┃
   ┗━━━┻━━━┻━━━┛   ┗━━━┻━━━┻━━━┛
   │ 6 │ 7 │ 8 │      (view)
   └───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(3,3)
   Z[:,2]
   
.. code::
   :class: output
  
   ┌───┬───┏━━━┓   ┏━━━┓
   │ 0 │ 1 ┃ 2 ┃   ┃ 2 ┃
   ├───┼───┣━━━┫   ┣━━━┫
   │ 3 │ 4 ┃ 5 ┃ → ┃ 5 ┃ (view)
   ├───┼───┣━━━┫   ┣━━━┫
   │ 6 │ 7 ┃ 8 ┃   ┃ 8 ┃
   └───┴───┗━━━┛   ┗━━━┛


.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(3,3)
   Z[1:,1:]
   
.. code::
   :class: output
  
   ┌───┬───┬───┐  
   │ 0 │ 1 │ 2 │    (view)
   ├───┏━━━┳━━━┓   ┏━━━┳━━━┓
   │ 3 ┃ 4 ┃ 5 ┃   ┃ 4 ┃ 5 ┃
   ├───┣━━━╋━━━┫ → ┣━━━╋━━━┫    
   │ 6 ┃ 7 ┃ 8 ┃   ┃ 7 ┃ 8 ┃
   └───┗━━━┻━━━┛   ┗━━━┻━━━┛


.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(3,3)
   Z[::2,::2]
   
.. code::
   :class: output
  
   ┏━━━┓───┏━━━┓   ┏━━━┳━━━┓
   ┃ 0 ┃ 1 ┃ 2 ┃   ┃ 0 ┃ 2 ┃
   ┗━━━┛───┗━━━┛ → ┣━━━╋━━━┫    
   │ 3 │ 4 │ 5 │   ┃ 6 ┃ 8 ┃
   ┏━━━┓───┏━━━┓   ┗━━━┻━━━┛
   ┃ 6 ┃ 7 ┃ 8 ┃    (view)
   ┗━━━┛───┗━━━┛

.. -------------------------------------
.. code-block:: python

   Z = np.arange(9).reshape(3,3)
   Z[[0,1],[0,2]]
   
.. code::
   :class: output
  
   ┏━━━┓───┬───┐
   ┃ 0 ┃ 1 │ 2 │
   ┗━━━┛───┏━━━┓   ┏━━━┳━━━┓
   │ 3 │ 4 ┃ 5 ┃ → ┃ 0 ┃ 5 ┃
   ├───┼───┗━━━┛   ┗━━━┻━━━┛
   │ 6 │ 7 │ 8 │    (copy)
   └───┴───┴───┘

   
Reshaping
---------

.. -------------------------------------
.. code-block:: python

   Z = np.array([0,0,0,0,0,0,0,0,0,0,1,0])
   
.. code::
   :class: output
  
   ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┏━━━┓───┐
   │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 ┃ 1 ┃ 0 │
   └───┴───┴───┴───┴───┴───┴───┴───┴───┴───┗━━━┛───┘

   
.. -------------------------------------
.. code-block:: python

   Z = np.array([0,0,0,0,0,0,0,0,0,0,1,0]).reshape(12,1)
   
.. code::
   :class: output

   ┌───┐
   │ 0 │
   ├───┤
   │ 0 │
   ├───┤
   │ 0 │
   ├───┤
   │ 0 │
   ├───┤
   │ 0 │
   ├───┤
   │ 0 │
   ├───┤
   │ 0 │
   ├───┤
   │ 0 │
   ├───┤
   │ 0 │
   ├───┤
   │ 0 │
   ┏━━━┓
   ┃ 1 ┃
   ┗━━━┛
   │ 0 │
   └───┘

.. -------------------------------------
.. code-block:: python

   Z = np.array([0,0,0,0,0,0,0,0,0,0,1,0]).reshape(3,4)
   
.. code::
   :class: output

   ┌───┬───┬───┬───┐
   │ 0 │ 0 │ 0 │ 0 │
   ├───┼───┼───┼───┤
   │ 0 │ 0 │ 0 │ 0 │
   ├───┼───┏━━━┓───┤
   │ 0 │ 0 ┃ 1 ┃ 0 │
   └───┴───┗━━━┛───┘


.. -------------------------------------
.. code-block:: python

   Z = np.array([0,0,0,0,0,0,0,0,0,0,1,0]).reshape(4,3)
   
.. code::
   :class: output

   ┌───┬───┬───┐
   │ 0 │ 0 │ 0 │
   ├───┼───┼───┤
   │ 0 │ 0 │ 0 │
   ├───┼───┼───┤
   │ 0 │ 0 │ 0 │
   ├───┏━━━┓───┤
   │ 0 ┃ 1 ┃ 0 │
   └───┗━━━┛───┘


.. -------------------------------------
.. code-block:: python

   Z = np.array([0,0,0,0,0,0,0,0,0,0,1,0]).reshape(6,2)
   
.. code::
   :class: output

   ┌───┬───┐
   │ 0 │ 0 │
   ├───┼───┤
   │ 0 │ 0 │
   ├───┼───┤
   │ 0 │ 0 │
   ├───┼───┤
   │ 0 │ 0 │
   ├───┼───┤
   │ 0 │ 0 │
   ┏━━━┓───┤
   ┃ 1 ┃ 0 │
   ┗━━━┛───┘


.. -------------------------------------
.. code-block:: python

   Z = np.array([0,0,0,0,0,0,0,0,0,0,1,0]).reshape(2,6)
   
.. code::
   :class: output

   ┌───┬───┬───┬───┬───┬───┐
   │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │
   ├───┼───┼───┼───┏━━━┓───┤
   │ 0 │ 0 │ 0 │ 0 ┃ 1 ┃ 0 │
   └───┴───┴───┴───┗━━━┛───┘

Broadcasting
------------

.. -------------------------------------
.. code-block:: python

   Z1 = np.arange(9).reshape(3,3)
   Z2 = 1
   Z1 + Z2
   
.. code::
   :class: output
  
   ┌───┬───┬───┐   ┌───┐   ┌───┬───┬───┐   ┏━━━┓───┬───┐   ┌───┬───┬───┐
   │ 0 │ 1 │ 2 │ + │ 1 │ = │ 0 │ 1 │ 2 │ + ┃ 1 ┃ 1 │ 1 │ = │ 1 │ 2 │ 3 │
   ├───┼───┼───┤   └───┘   ├───┼───┼───┤   ┗━━━┛───┼───┤   ├───┼───┼───┤
   │ 3 │ 4 │ 5 │           │ 3 │ 4 │ 5 │   │ 1 │ 1 │ 1 │   │ 4 │ 5 │ 6 │
   ├───┼───┼───┤           ├───┼───┼───┤   ├───┼───┼───┤   ├───┼───┼───┤
   │ 6 │ 7 │ 8 │           │ 6 │ 7 │ 8 │   │ 1 │ 1 │ 1 │   │ 7 │ 8 │ 9 │ 
   └───┴───┴───┘           └───┴───┴───┘   └───┴───┴───┘   └───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z1 = np.arange(9).reshape(3,3)
   Z2 = np.arange(3)[::-1].reshape(3,1)
   Z1 + Z2
   
.. code::
   :class: output
  
   ┌───┬───┬───┐   ┌───┐   ┌───┬───┬───┐   ┏━━━┓───┬───┐   ┌───┬───┬───┐
   │ 0 │ 1 │ 2 │ + │ 2 │ = │ 0 │ 1 │ 2 │ + ┃ 2 ┃ 2 │ 2 │ = │ 2 │ 3 │ 4 │
   ├───┼───┼───┤   ├───┤   ├───┼───┼───┤   ┣━━━┫───┼───┤   ├───┼───┼───┤
   │ 3 │ 4 │ 5 │   │ 1 │   │ 3 │ 4 │ 5 │   ┃ 1 ┃ 1 │ 1 │   │ 4 │ 5 │ 6 │
   ├───┼───┼───┤   ├───┤   ├───┼───┼───┤   ┣━━━┫───┼───┤   ├───┼───┼───┤
   │ 6 │ 7 │ 8 │   │ 0 │   │ 6 │ 7 │ 8 │   ┃ 0 ┃ 0 │ 0 │   │ 6 │ 7 │ 8 │ 
   └───┴───┴───┘   └───┘   └───┴───┴───┘   ┗━━━┛───┴───┘   └───┴───┴───┘

   
.. -------------------------------------
.. code-block:: python

   Z1 = np.arange(9).reshape(3,3)
   Z2 = np.arange(3)[::-1]
   Z1 + Z2
   
.. code::
   :class: output
  
   ┌───┬───┬───┐   ┌───┬───┬───┐   ┌───┬───┬───┐   ┏━━━┳━━━┳━━━┓   ┌───┬───┬───┐
   │ 0 │ 1 │ 2 │ + │ 2 │ 1 │ 0 │ = │ 0 │ 1 │ 2 │ + ┃ 2 ┃ 1 ┃ 0 ┃ = │ 2 │ 2 │ 2 │
   ├───┼───┼───┤   └───┴───┴───┘   ├───┼───┼───┤   ┗━━━┻━━━┻━━━┛   ├───┼───┼───┤
   │ 3 │ 4 │ 5 │                   │ 3 │ 4 │ 5 │   │ 2 │ 1 │ 0 │   │ 5 │ 5 │ 5 │
   ├───┼───┼───┤                   ├───┼───┼───┤   ├───┼───┼───┤   ├───┼───┼───┤
   │ 6 │ 7 │ 8 │                   │ 6 │ 7 │ 8 │   │ 2 │ 1 │ 0 │   │ 8 │ 8 │ 8 │ 
   └───┴───┴───┘                   └───┴───┴───┘   └───┴───┴───┘   └───┴───┴───┘


.. -------------------------------------
.. code-block:: python

   Z1 = np.arange(3).reshape(3,1)
   Z2 = np.arange(3).reshape(1,3)
   Z1 + Z2
   
.. code::
   :class: output
  
   ┌───┐   ┌───┬───┬───┐   ┏━━━┓───┬───┐   ┏━━━┳━━━┳━━━┓   ┌───┬───┬───┐
   │ 0 │ + │ 0 │ 1 │ 2 │ = ┃ 0 ┃ 0 │ 0 │ + ┃ 0 ┃ 1 ┃ 2 ┃ = │ 0 │ 1 │ 2 │
   ├───┤   └───┴───┴───┘   ┣━━━┫───┼───┤   ┗━━━┻━━━┻━━━┛   ├───┼───┼───┤
   │ 1 │                   ┃ 1 ┃ 1 │ 1 │   │ 0 │ 1 │ 2 │   │ 1 │ 2 │ 3 │
   ├───┤                   ┣━━━┫───┼───┤   ├───┼───┼───┤   ├───┼───┼───┤
   │ 2 │                   ┃ 2 ┃ 2 │ 2 │   │ 0 │ 1 │ 2 │   │ 2 │ 3 │ 4 │ 
   └───┘                   ┗━━━┛───┴───┘   └───┴───┴───┘   └───┴───┴───┘
